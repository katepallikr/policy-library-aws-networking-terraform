import "tfplan/v2" as tfplan
import "tfconfig/v2" as tfconfig
import "strings"

# List of approved module sources
approved_module_sources = [
  "app.terraform.io/Cloud-Operations/s3-bucket/aws",
  "app.terraform.io/Cloud-Operations/vpc/aws",
  "hashicorp/consul/aws",
  "terraform-aws-modules/vpc/aws",
]

# Function to check if a module source is approved
is_approved_module = func(source) {
  for approved_source in approved_module_sources {
    if strings.has_prefix(source, approved_source) {
      return true
    }
  }
  return false
}

# Define the main rule for resource changes
resource_changes_rule = rule {
  all tfplan.resource_changes as _, rc {
    all rc.change.actions as action {
      action in ["create", "update"]
    }
  }
}

# Rule to check if all modules are approved
approved_modules_rule = rule {
  all tfconfig.module_calls as _, module {
    is_approved_module(module.source)
  }
}

# Helper function to get unapproved module names
get_unapproved_modules = func() {
  return [
    name |
      name, module in tfconfig.module_calls
      if not is_approved_module(module.source)
  ]
}

# Main rule
main = rule {
  resource_changes_rule and
  approved_modules_rule
}

# Print violation message if any
violation_message = rule {
  unapproved = get_unapproved_modules()
  print(sprintf("The following modules are not approved: %v", unapproved))
  length(unapproved) == 0
}
